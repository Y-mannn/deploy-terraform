# Terrafrom-actions.yml

name: Terraform AWS Workflow

on:
  pull_request:
    branches: [ main ]
    paths: 
      - 'woo/**'
      - '.github/workflows/woo-workflow.yml'
  push:
    branches: [ main ]
    paths: 
      - 'woo/**'
      - '.github/workflows/woo-workflow.yml'

jobs:
  # 코드 스캔
  TF_Code_Scan:
    name: Code Scan
    environment: woo
    defaults:
      run:
        working-directory: ./woo
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # IaC(Infrastructure as Code) 스캐너
    - name: Run Terrascan
      id: terrascan
      uses: tenable/terrascan-action@main
      with:
        # IaC 유형(helm, k8s, kustomize, terraform)
        iac_type: "terraform"
        iac_version: "v14"
        # 정책 유형(all, aws, azure, gcp, github, k8s). 기본값 all
        policy_type: "aws"
        # 코드에 문제가 있으면 경고만 하고 에러는 발생하지 않는다.
        only_warn: true
        # terrascan.sarif라는 sarif 파일이 스캔 결과와 함께 생성
        sarif_upload: true

  # 코드 배포
  TF_Code_Plan_and_Apply:
    needs: TF_Code_Scan
    name: Code Plan and Apply
    permissions:
      contents: read 
      pull-requests: write
    environment: woo
    defaults:
      run:
        working-directory: ./woo
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: |
        ls -al
        #terraform plan -no-color -var-file="./env/stg.tfvars"

    # - name: Terraform apply
    #   id: apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve